apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
        metrics: enabled
    spec:
      containers:
      - env:
        - name: LISTEN_ADDR
          value: 127.0.0.1:9090
        - name: NAME
          value: api
        - name: MESSAGE
          value: Response from API
        image: nicholasjackson/fake-service:v0.20.0
        name: api
        ports:
        - containerPort: 9090
      - command:
        - /bin/sh
        - -ec
        - |
          exec /bin/consul agent \
            -node="${HOSTNAME}" \
            -advertise="${POD_IP}" \
            -bind=0.0.0.0 \
            -client=0.0.0.0 \
            -hcl='leave_on_terminate = true' \
            -hcl='ports { grpc = 8502 }' \
            -config-dir=/consul/config \
            -datacenter=dc1 \
            -data-dir=/consul/data \
            -retry-join="${CONSUL_SVC_ADDRESS}" \
            -domain=consul
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONSUL_SVC_ADDRESS
          value: consul-server.default.svc:8301
        - name: SERVICE_NAME
          value: 'api'
        - name: SERVICE_PORT
          value: '9090'
        image: hashicorp/consul:1.9.1
        imagePullPolicy: IfNotPresent
        name: consul-agent
        ports:
        - containerPort: 8500
          name: http
          protocol: TCP
        - containerPort: 8502
          name: grpc
          protocol: TCP
        - containerPort: 8301
          name: serflan-tcp
          protocol: TCP
        - containerPort: 8301
          name: serflan-udp
          protocol: UDP
        - containerPort: 8600
          name: dns-tcp
          protocol: TCP
        - containerPort: 8600
          name: dns-udp
          protocol: UDP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - |
              curl http://127.0.0.1:8500/v1/status/leader \
              2>/dev/null | grep -E '".+"'
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /consul/data
          name: consul-agent-data
        - mountPath: /consul/config
          name: consul-connect-config-data
        - mountPath: /consul/envoy
          name: consul-connect-envoy-data
      - command:
        - /bin/sh
        - -ec
        - |
          /consul/bin/consul connect envoy \
          -proxy-id="${SERVICE_NAME}-sidecar-proxy-${POD_NAME}" \
          -bootstrap > /consul/envoy/envoy-bootstrap.yaml
          envoy \
          --config-path \
          /consul/envoy/envoy-bootstrap.yaml
        env:
        - name: CONSUL_HTTP_ADDR
          value: http://localhost:8500
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SERVICE_NAME
          value: 'api'
        image: envoyproxy/envoy-alpine:v1.16.0
        imagePullPolicy: IfNotPresent
        name: consul-connect-envoy-sidecar
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /consul/envoy
          name: consul-connect-envoy-data
        - mountPath: /consul/bin
          name: consul-connect-bin-data
      initContainers:
      - command:
        - /bin/sh
        - -ec
        - |
          # Create the service definition
          # the consul agent will automatically read this config and register the service
          # and de-register it on exit.

          cat <<EOF >/consul/config/service.hcl
          services {
            id   = "${SERVICE_NAME}-${POD_NAME}"
            name = "${SERVICE_NAME}"
            address = "${POD_IP}"
            port = ${SERVICE_PORT}
            tags = ["v1"]
            meta = {
              pod-name = "${POD_NAME}"
            }
          }
          services {
            id   = "${SERVICE_NAME}-sidecar-proxy-${POD_NAME}"
            name = "${SERVICE_NAME}-sidecar-proxy"
            kind = "connect-proxy"
            address = "${POD_IP}"
            port = 20000
            tags = ["v1"]
            meta = {
              pod-name = "${POD_NAME}"
            }

            proxy {
              destination_service_name = "${SERVICE_NAME}"
              destination_service_id = "${SERVICE_NAME}-${POD_NAME}"
              local_service_address = "127.0.0.1"
              local_service_port = ${SERVICE_PORT}
              
            }

            checks {
              name = "Proxy Public Listener"
              tcp = "${POD_IP}:20000"
              interval = "10s"
              deregister_critical_service_after = "10m"
            }

            checks {
              name = "Destination Alias"
              alias_service = "${SERVICE_NAME}-${POD_NAME}"
            }

          }
          EOF

          # Copy the Consul binary
          cp /bin/consul /consul/bin/consul
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SERVICE_NAME
          value: 'api'
        - name: SERVICE_PORT
          value: '9090'
        image: hashicorp/consul:1.9.1
        imagePullPolicy: IfNotPresent
        name: consul-init
        volumeMounts:
        - mountPath: /consul/config
          name: consul-connect-config-data
        - mountPath: /consul/bin
          name: consul-connect-bin-data
      volumes:
      - emptyDir: {}
        name: consul-connect-envoy-data
      - emptyDir: {}
        name: consul-connect-config-data
      - emptyDir: {}
        name: consul-connect-bin-data
      - emptyDir: {}
        name: consul-agent-data
